Para que les funcione como de momento no sabemos como lo vamos a implementar tienen que hacer lo siguiente:
1- Poner la BD "GOLDEN_CL.FDB" en alguna ubicacion del disco que la pueden editar en la clase DbConnection yo elegi "C:/GOLDEN_CL.FDB"

2- Crear en la tabla USECASE dos nuevas entradas, revisen cuales son campos obligatorios y hagan lo minimo
los valores de CODIGO y NODO son iguales, uno tiene que ser "ANDROIDIN" y el otro "ANDROIDOUT". Por si no conocen
algo de la herramienta, despues de el INSERT tienen que hacer 2 commit, manuales, suele ser un tick verde arriba en la interfaz (me paso que estuve renegando para lograr commitear).

3- Corren la API, y pegan a api/sesion/login/Juansito y api/sesion/logout/Pepito

Para loguear y desloguear respectivamente, tambien hice el chequeo si ya esta logueado o deslogueado
no les permite pegar y les devuelve un mensaje. Que lo puede usar el que haga el login derecho si quiere
para mostrar en android.


Se agrego la obtencion de los codigo de barra, para lograr esto tienen que ejecutar primero los 2 insert en
la tabla TIPOSCODBARRA, se los dejo por las dudas:

INSERT INTO TIPOSCODBARRA (NUMERO, NOMBRE, DESCRI, LARTOT, UCODPR, LCODPR, UBICAN, LARCAN, UBIPRE, LARPRE, UBIPES, LARPES, UFECEL, LFECEL, UFECVE, LFECVE, UDIGVE, LDIGVE, UNUSER, LNUSER, CANTDECPESO) VALUES (1, 'Friar26', 'Etiqueta Grande Friar', 26, 8, 4, 12, 2, 0, 0, 14, 5, 19, 8, 0, 0, 1, 7, 0, 0, 2);

INSERT INTO TIPOSCODBARRA (NUMERO, NOMBRE, DESCRI, LARTOT, UCODPR, LCODPR, UBICAN, LARCAN, UBIPRE, LARPRE, UBIPES, LARPES, UFECEL, LFECEL, UFECVE, LFECVE, UDIGVE, LDIGVE, UNUSER, LNUSER, CANTDECPESO) VALUES (2, 'EAN13', 'EAN13', 13, 4, 4, 0, 0, 0, 8, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3);


Corren la api y pegan a api/codigos/get/Pepito van a obtener un listado de codigos de barra.


Se agrego la funcionalidad getComprobantes, para probarlo tienen que ejecutar el script completo que mando jose
Y pegar a api/comprobantes/get/pepito

Actualiza el estado del picking y si no existe en la tabla picking_user lo crea, con el nro de pick del comprobante y el id de usuario correspondiente al nombre "pepito".



Se agrego la funcionalidad saveStock que recibe un comprobante, tengo que hacer algo de refactoring pero esta de mi lado. Anda todo, testie y graba perfecto 
toda las tablas involucradas en el saveStock. Lo unico que tienen que tener en cuenta es que no puede haber seriales iguales dentro del objeto que mande
(Nose si esto esta bien o no, segun lo que entendi yo del modelo tiene q ser de esa manera, despues lo discutimos. Si mandan seriales identicos explota, no llegue
a ver porque y me tengo q ir)

Para correrlo lo unico que tienen que hacer es estos dos insert:

INSERT INTO PARAMETROS (EMPRES, CODIGO, DESCRI, BOOLE1) VALUES (1, 'PROVEE', 'Proveedor',1);

INSERT INTO PARAMETROS (EMPRES, CODIGO, DESCRI, TEXTO1, TEXTO2) VALUES (1, 'COMPDROID', 'Parametro comprobante android','AJS', 'GEN_TAL58');

OBVIAMENTE ADEMAS DE ESTO, TODO LO QUE JOSE PASO EN SU MOMENTO EN EL SCRIPT.SQL (QUE YA LO DEBERIAN TENER).


To do: (Luego de la reunion Demo)

-Arreglar funcionamiento MOVSERIALESART -- Hecho

- Modificar PARAMETROS para que comiencen todo con la misma letra (modificar codigo) Hecho
Los parametros ahora se llaman:
DROIDCOMP y DROIDPROVE (Tienen que modificarlos para que les funcione en su tabla PARAMETROS del modelo.

- Agregar el commmit al save stock
Consulta, el stock commit dice "Cambia el codigo del comprobante.", el codigo del comprobante que estamos
usando es un parametro en este caso AJS, yo deberia cambiar el codigo de MOV_ARTICULOS mas precisamente
la columna COMPRO, pero que codigo le pongo para cuando hace el commit de stock? 

- Metodo para saber si hay update o no, y creacion del parametro para esta funcion

Creacion del parametro: insert into parametros (EMPRES,CODIGO,DESCRI,BOOLE1) VALUES
(1,'DROIDUPDAT','Update de Articulos para App Android',0);

0 significa que no hay updates, 1 que si. Ese valor lo modifican ellos. (Es un parametro)

Para pegar a la API que te va a devolver true o false, true (Si hay updates pendientes , aca deberian mostrar "Hay updates pendientes" y forzarlos a apretar el boton para updatear), false ( Yo no mostraria nada).

la URI es: http://localhost:52008/api/updates/pendientes

- Metodo para buscar los articulos (SP hecho por jose, por el momento select a tabla articulos con todo.)
Aca tenemos 2 opciones, que ustedes chequeen si obtienen la tabla articulos y entonces me manden a otra URI
para q yo cambie el DROIDUPDAT a 0, o que lo haga yo, si veo que la informacion es correcta en el mismo metodo
donde hago el select a todos los articulos. Por el momento lo hago yo. Despues lo definimos

De momento solo les devuelvo Codigo y descripcion del articulo, para que no sea tan lento. Despues tienen que decirme si necesitan algo mas.
La URI es : http://localhost:52008/api/updates/articulos

Lo que devuelve es un listado de objetos articulos, que en este momento tiene 2 atributos.. Codigo y descripcion


Entrada/Salida
La URI Es:
http://localhost:52008/api/entradasalida/ingresar/pistola

y lo que mandan es un objeto comprobante, igual que el que reciben en getComprobante, pero con el numero de serial
llenado.

